# -*- coding: utf-8 -*-
"""Bankingsystem

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mqFiRO_YofSHRHDvALCzS-Knukiz5NqP
"""

import streamlit as st
import random

# App Title
st.title("üè¶ Dhanush's World - Help Desk")

# Session State for storing values across interactions
if "name" not in st.session_state:
    st.session_state.name = None
if "pin_number" not in st.session_state:
    st.session_state.pin_number = None
if "balance" not in st.session_state:
    st.session_state.balance = 0

# Menu options
menu = ["Open a Bank Account", "Generate PIN", "Change PIN", "Deposit Amount", "Withdraw Amount", "Check Balance", "Exit"]
choice = st.selectbox("How may I help you? (Select an option)", menu)

# 1. Open Bank Account
if choice == "Open a Bank Account":
    name = st.text_input("Enter your Name")
    age = st.number_input("Enter your Age", min_value=0, step=1)
    gender = st.selectbox("Enter your Gender", ["Male", "Female", "Other"])

    if st.button("Create Account"):
        st.session_state.name = name
        if age < 18:
            st.success("üë∂ Minor Account created.")
        else:
            st.success("üßë Major Account created.")
        st.info(f"{name} aged {age} has opened an account.")

# 2. Generate PIN
elif choice == "Generate PIN":
    entered_name = st.text_input("Enter your name")
    if st.button("Generate PIN"):
        if st.session_state.name and entered_name == st.session_state.name:
            st.session_state.pin_number = random.randint(1000, 9999)
            st.success(f"üîë Your generated PIN is: {st.session_state.pin_number}")
        else:
            st.error("Invalid name. Please open an account first.")

# 3. Change PIN
elif choice == "Change PIN":
    if st.session_state.pin_number is None:
        st.warning("Please generate your PIN first (Option 2).")
    else:
        new_pin = st.number_input("Enter your new PIN", min_value=1000, max_value=9999, step=1)
        if st.button("Change PIN"):
            if new_pin != st.session_state.pin_number:
                st.session_state.pin_number = new_pin
                st.success("‚úÖ PIN successfully changed.")
            else:
                st.warning("‚ö†Ô∏è This is your existing PIN. Try a new one.")

# 4. Deposit Amount
elif choice == "Deposit Amount":
    if st.session_state.pin_number is None:
        st.warning("Please generate your PIN first (Option 2).")
    else:
        entered_pin = st.number_input("Enter your PIN", min_value=1000, max_value=9999, step=1)
        amount = st.number_input("Enter the amount to deposit", min_value=1, step=1)
        if st.button("Deposit"):
            if entered_pin == st.session_state.pin_number:
                st.session_state.balance += amount
                st.success(f"‚úÖ ‚Çπ{amount} deposited successfully.")
            else:
                st.error("‚ùå Incorrect PIN.")

# 5. Withdraw Amount
elif choice == "Withdraw Amount":
    if st.session_state.pin_number is None:
        st.warning("Please generate your PIN first (Option 2).")
    else:
        entered_pin = st.number_input("Enter your PIN", min_value=1000, max_value=9999, step=1)
        withdraw_amount = st.number_input("Enter the amount to withdraw", min_value=1, step=1)
        if st.button("Withdraw"):
            if entered_pin == st.session_state.pin_number:
                if withdraw_amount > st.session_state.balance:
                    st.error("‚ùå Insufficient Balance.")
                else:
                    st.session_state.balance -= withdraw_amount
                    st.success(f"‚úÖ ‚Çπ{withdraw_amount} withdrawn successfully.")
            else:
                st.error("‚ùå Incorrect PIN.")

# 6. Check Balance
elif choice == "Check Balance":
    st.info(f"üí∞ Your current balance is ‚Çπ{st.session_state.balance}")

# 7. Exit
elif choice == "Exit":
    st.success("üôè Thank you for visiting Dhanush's World. Goodbye!")